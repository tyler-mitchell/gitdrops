diff --git a/config.js b/config.js
index 62d411c61286d64cc3954d875ae1f4ad5f433e20..e41699472ca40ca7b7e99a153d205db56a0e922c 100644
--- a/config.js
+++ b/config.js
@@ -1,4 +1,4 @@
-"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fs=require("fs"),module$1=require("module"),path=require("path"),deps=require("./deps.js"),innerState=require("./innerState.js"),prettier=require("./prettier.js"),cjsRequire=globalThis.require||module$1.createRequire((typeof document>"u"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("config.js",document.baseURI).href).toString());function isPlainObject(i){return i!=null&&typeof i=="object"&&!Array.isArray(i)}function isStringRecord(i){return isPlainObject(i)&&Object.values(i).every(n=>typeof n=="string")}const DUMMY_ENDPOINT="SPECIFY_ENDPOINT_OR_SCHEMA_FILE_PATH_HERE",defaultConfig={react:(()=>{try{return cjsRequire.resolve("react"),!0}catch{}return!1})(),scalarTypes:{DateTime:"string"},introspection:{endpoint:DUMMY_ENDPOINT,headers:{}},endpoint:"/api/graphql",destination:"./src/gqty/index.ts",subscriptions:!1,javascriptOutput:!1,enumsAsStrings:!1,enumsAsConst:!1,preImport:""};function warnConfig(i,n,t,e){console.warn(`Warning, invalid config ${i}, got: ${JSON.stringify(n)}, expected ${t}. ${JSON.stringify(e)} used instead.`)}function getValidConfig(i){if(isPlainObject(i)){const n={};typeof i.javascriptOutput=="boolean"&&(n.javascriptOutput=i.javascriptOutput);for(const[t,e]of Object.entries(i))if(e!==void 0)switch(t){case"destination":case"preImport":{typeof e=="string"?n[t]=e:warnConfig(t,e,"string",defaultConfig[t]);break}case"javascriptOutput":case"react":case"subscriptions":case"enumsAsStrings":{typeof e=="boolean"?n[t]=e:warnConfig(t,e,"boolean",defaultConfig[t]);break}case"enumsAsConst":{typeof e=="boolean"?n[t]=e:warnConfig(t,e,"boolean",defaultConfig[t]);break}case"scalarTypes":{isStringRecord(e)?n[t]=e:warnConfig(t,e,'"object of strings"',defaultConfig[t]);break}case"endpoint":{e&&typeof e=="string"?n[t]=e:warnConfig(t,e,"string",defaultConfig[t]);break}case"introspection":{if(isPlainObject(e)){const o={};for(const[r,s]of Object.entries(e))if(s!==void 0)switch(r){case"endpoint":{typeof s=="string"?o[r]=s:warnConfig(`${t}.${r}`,s,"string",defaultConfig.introspection.endpoint);break}case"headers":{isStringRecord(s)?o[r]=s:warnConfig(`${t}.${r}`,s,'"object of strings"',defaultConfig.introspection.headers);break}default:console.warn(`Warning, invalid and unused config property "${t}.${r}": ${JSON.stringify(e)}`)}n[t]=o}else warnConfig(t,e,"object",defaultConfig[t]);break}case"introspections":{if(isPlainObject(e)){const o={};for(const[r,s]of Object.entries(e))isPlainObject(s)?o[r]=s:warnConfig(`${t}.${r}`,s,'"object of strings"',{});n[t]=o}else warnConfig(t,e,"object",defaultConfig[t]);break}case"transformSchema":{typeof e=="function"?n[t]=e:warnConfig(t,e,"function","undefined");break}default:console.warn(`Warning, invalid and unused config property "${t}": ${JSON.stringify(e)}`)}return n}else return console.warn("Invalid config, using instead: "+JSON.stringify(defaultConfig,null,2)),defaultConfig}const defaultFilePath=path.resolve(process.cwd(),"gqty.config.cjs"),defaultGQtyConfig={filepath:defaultFilePath,config:defaultConfig};let gqtyConfigPromise;const loadOrGenerateConfig=async({writeConfigFile:i=!1}={})=>(gqtyConfigPromise===void 0&&(gqtyConfigPromise=new Promise(async n=>{try{const t=o=>cjsRequire(o),e=await deps.cosmiconfig("gqty",{searchPlaces:["gqty.config.cjs","gqty.config.js","package.json"],loaders:{".cjs":t,".js":t}}).search();if(!e||e.isEmpty){const o=(e==null?void 0:e.filepath)||defaultFilePath,r=process.env.NODE_ENV;if(r!=="test"&&r!=="production"&&innerState.__innerState.isCLI){const{format:s}=prettier.formatPrettier({parser:"typescript"}),c={...defaultConfig};delete c.preImport,delete c.enumsAsStrings,i&&await fs.promises.writeFile(defaultFilePath,await s(`
+"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fs=require("fs"),module$1=require("module"),path=require("path"),deps=require("./deps.js"),innerState=require("./innerState.js"),prettier=require("./prettier.js"),cjsRequire=globalThis.require||module$1.createRequire((typeof document>"u"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("config.js",document.baseURI).href).toString());function isPlainObject(i){return i!=null&&typeof i=="object"&&!Array.isArray(i)}function isStringRecord(i){return isPlainObject(i)&&Object.values(i).every(n=>typeof n=="string")}const DUMMY_ENDPOINT="SPECIFY_ENDPOINT_OR_SCHEMA_FILE_PATH_HERE",defaultConfig={react:(()=>{try{return cjsRequire.resolve("react"),!0}catch{}return!1})(),scalarTypes:{DateTime:"string"},introspection:{endpoint:DUMMY_ENDPOINT,headers:{}},endpoint:"/api/graphql",destination:"./src/gqty/index.ts",subscriptions:!1,javascriptOutput:!1,enumsAsStrings:!1,enumsAsConst:!1,preImport:""};function warnConfig(i,n,t,e){console.warn(`Warning, invalid config ${i}, got: ${JSON.stringify(n)}, expected ${t}. ${JSON.stringify(e)} used instead.`)}function getValidConfig(i){if(isPlainObject(i)){const n={};typeof i.javascriptOutput=="boolean"&&(n.javascriptOutput=i.javascriptOutput);for(const[t,e]of Object.entries(i))if(e!==void 0)switch(t){case"destination":case"preImport":{typeof e=="string"?n[t]=e:warnConfig(t,e,"string",defaultConfig[t]);break}case"javascriptOutput":case"react":case"subscriptions":case"enumsAsStrings":{typeof e=="boolean"?n[t]=e:warnConfig(t,e,"boolean",defaultConfig[t]);break}case"enumsAsConst":{typeof e=="boolean"?n[t]=e:warnConfig(t,e,"boolean",defaultConfig[t]);break}case"scalarTypes":{isStringRecord(e)?n[t]=e:warnConfig(t,e,'"object of strings"',defaultConfig[t]);break}case"endpoint":{e&&typeof e=="string"?n[t]=e:warnConfig(t,e,"string",defaultConfig[t]);break}case"introspection":{if(isPlainObject(e)){const o={};for(const[r,s]of Object.entries(e))if(s!==void 0)switch(r){case"endpoint":{typeof s=="string"?o[r]=s:warnConfig(`${t}.${r}`,s,"string",defaultConfig.introspection.endpoint);break}case"headers":{isStringRecord(s)?o[r]=s:warnConfig(`${t}.${r}`,s,'"object of strings"',defaultConfig.introspection.headers);break}default:console.warn(`Warning, invalid and unused config property "${t}.${r}": ${JSON.stringify(e)}`)}n[t]=o}else warnConfig(t,e,"object",defaultConfig[t]);break}case"introspections":{if(isPlainObject(e)){const o={};for(const[r,s]of Object.entries(e))isPlainObject(s)?o[r]=s:warnConfig(`${t}.${r}`,s,'"object of strings"',{});n[t]=o}else warnConfig(t,e,"object",defaultConfig[t]);break}case"transformSchema":{typeof e=="function"?n[t]=e:warnConfig(t,e,"function","undefined");break}default:console.warn(`Warning, invalid and unused config property "${t}": ${JSON.stringify(e)}`)}return n}else return console.warn("Invalid config, using instead: "+JSON.stringify(defaultConfig,null,2)),defaultConfig}const defaultFilePath=path.resolve(process.cwd(),"gqty.config.cjs"),defaultGQtyConfig={filepath:defaultFilePath,config:defaultConfig};let gqtyConfigPromise;const loadOrGenerateConfig=async({writeConfigFile:i=!1}={})=>(gqtyConfigPromise===void 0&&(gqtyConfigPromise=new Promise(async n=>{try{const t=o=>cjsRequire(o),e=await deps.cosmiconfig("gqty",{searchPlaces:[process.env.GQTY_CONFIG_FILE_PATH, "gqty.config.cjs","gqty.config.js","package.json"],loaders:{".cjs":t,".js":t}}).search();if(!e||e.isEmpty){const o=(e==null?void 0:e.filepath)||defaultFilePath,r=process.env.NODE_ENV;if(r!=="test"&&r!=="production"&&innerState.__innerState.isCLI){const{format:s}=prettier.formatPrettier({parser:"typescript"}),c={...defaultConfig};delete c.preImport,delete c.enumsAsStrings,i&&await fs.promises.writeFile(defaultFilePath,await s(`
                           /**
                            * @type {import("@gqty/cli").GQtyConfig}
                            */
diff --git a/config.mjs b/config.mjs
index d9694591222336a29d8a61d71453cba144f3fed5..8a8eaec85d5a0f2d986123f0251908019b00e5d2 100644
--- a/config.mjs
+++ b/config.mjs
@@ -1,4 +1,4 @@
-import{promises as b}from"fs";import{createRequire as j}from"module";import{resolve as O}from"path";import*as h from"./deps.js";import{__innerState as $}from"./innerState.mjs";import{formatPrettier as S}from"./prettier.mjs";const u=globalThis.require||j(import.meta.url.toString());function f(i){return i!=null&&typeof i=="object"&&!Array.isArray(i)}function d(i){return f(i)&&Object.values(i).every(n=>typeof n=="string")}const y="SPECIFY_ENDPOINT_OR_SCHEMA_FILE_PATH_HERE",o={react:(()=>{try{return u.resolve("react"),!0}catch{}return!1})(),scalarTypes:{DateTime:"string"},introspection:{endpoint:y,headers:{}},endpoint:"/api/graphql",destination:"./src/gqty/index.ts",subscriptions:!1,javascriptOutput:!1,enumsAsStrings:!1,enumsAsConst:!1,preImport:""};function c(i,n,t,e){console.warn(`Warning, invalid config ${i}, got: ${JSON.stringify(n)}, expected ${t}. ${JSON.stringify(e)} used instead.`)}function m(i){if(f(i)){const n={};typeof i.javascriptOutput=="boolean"&&(n.javascriptOutput=i.javascriptOutput);for(const[t,e]of Object.entries(i))if(e!==void 0)switch(t){case"destination":case"preImport":{typeof e=="string"?n[t]=e:c(t,e,"string",o[t]);break}case"javascriptOutput":case"react":case"subscriptions":case"enumsAsStrings":{typeof e=="boolean"?n[t]=e:c(t,e,"boolean",o[t]);break}case"enumsAsConst":{typeof e=="boolean"?n[t]=e:c(t,e,"boolean",o[t]);break}case"scalarTypes":{d(e)?n[t]=e:c(t,e,'"object of strings"',o[t]);break}case"endpoint":{e&&typeof e=="string"?n[t]=e:c(t,e,"string",o[t]);break}case"introspection":{if(f(e)){const a={};for(const[r,s]of Object.entries(e))if(s!==void 0)switch(r){case"endpoint":{typeof s=="string"?a[r]=s:c(`${t}.${r}`,s,"string",o.introspection.endpoint);break}case"headers":{d(s)?a[r]=s:c(`${t}.${r}`,s,'"object of strings"',o.introspection.headers);break}default:console.warn(`Warning, invalid and unused config property "${t}.${r}": ${JSON.stringify(e)}`)}n[t]=a}else c(t,e,"object",o[t]);break}case"introspections":{if(f(e)){const a={};for(const[r,s]of Object.entries(e))f(s)?a[r]=s:c(`${t}.${r}`,s,'"object of strings"',{});n[t]=a}else c(t,e,"object",o[t]);break}case"transformSchema":{typeof e=="function"?n[t]=e:c(t,e,"function","undefined");break}default:console.warn(`Warning, invalid and unused config property "${t}": ${JSON.stringify(e)}`)}return n}else return console.warn("Invalid config, using instead: "+JSON.stringify(o,null,2)),o}const l=O(process.cwd(),"gqty.config.cjs"),w={filepath:l,config:o};let g;const N=async({writeConfigFile:i=!1}={})=>(g===void 0&&(g=new Promise(async n=>{try{const t=a=>u(a),e=await h.cosmiconfig("gqty",{searchPlaces:["gqty.config.cjs","gqty.config.js","package.json"],loaders:{".cjs":t,".js":t}}).search();if(!e||e.isEmpty){const a=(e==null?void 0:e.filepath)||l,r=process.env.NODE_ENV;if(r!=="test"&&r!=="production"&&$.isCLI){const{format:s}=S({parser:"typescript"}),p={...o};delete p.preImport,delete p.enumsAsStrings,i&&await b.writeFile(l,await s(`
+import{promises as b}from"fs";import{createRequire as j}from"module";import{resolve as O}from"path";import*as h from"./deps.js";import{__innerState as $}from"./innerState.mjs";import{formatPrettier as S}from"./prettier.mjs";const u=globalThis.require||j(import.meta.url.toString());function f(i){return i!=null&&typeof i=="object"&&!Array.isArray(i)}function d(i){return f(i)&&Object.values(i).every(n=>typeof n=="string")}const y="SPECIFY_ENDPOINT_OR_SCHEMA_FILE_PATH_HERE",o={react:(()=>{try{return u.resolve("react"),!0}catch{}return!1})(),scalarTypes:{DateTime:"string"},introspection:{endpoint:y,headers:{}},endpoint:"/api/graphql",destination:"./src/gqty/index.ts",subscriptions:!1,javascriptOutput:!1,enumsAsStrings:!1,enumsAsConst:!1,preImport:""};function c(i,n,t,e){console.warn(`Warning, invalid config ${i}, got: ${JSON.stringify(n)}, expected ${t}. ${JSON.stringify(e)} used instead.`)}function m(i){if(f(i)){const n={};typeof i.javascriptOutput=="boolean"&&(n.javascriptOutput=i.javascriptOutput);for(const[t,e]of Object.entries(i))if(e!==void 0)switch(t){case"destination":case"preImport":{typeof e=="string"?n[t]=e:c(t,e,"string",o[t]);break}case"javascriptOutput":case"react":case"subscriptions":case"enumsAsStrings":{typeof e=="boolean"?n[t]=e:c(t,e,"boolean",o[t]);break}case"enumsAsConst":{typeof e=="boolean"?n[t]=e:c(t,e,"boolean",o[t]);break}case"scalarTypes":{d(e)?n[t]=e:c(t,e,'"object of strings"',o[t]);break}case"endpoint":{e&&typeof e=="string"?n[t]=e:c(t,e,"string",o[t]);break}case"introspection":{if(f(e)){const a={};for(const[r,s]of Object.entries(e))if(s!==void 0)switch(r){case"endpoint":{typeof s=="string"?a[r]=s:c(`${t}.${r}`,s,"string",o.introspection.endpoint);break}case"headers":{d(s)?a[r]=s:c(`${t}.${r}`,s,'"object of strings"',o.introspection.headers);break}default:console.warn(`Warning, invalid and unused config property "${t}.${r}": ${JSON.stringify(e)}`)}n[t]=a}else c(t,e,"object",o[t]);break}case"introspections":{if(f(e)){const a={};for(const[r,s]of Object.entries(e))f(s)?a[r]=s:c(`${t}.${r}`,s,'"object of strings"',{});n[t]=a}else c(t,e,"object",o[t]);break}case"transformSchema":{typeof e=="function"?n[t]=e:c(t,e,"function","undefined");break}default:console.warn(`Warning, invalid and unused config property "${t}": ${JSON.stringify(e)}`)}return n}else return console.warn("Invalid config, using instead: "+JSON.stringify(o,null,2)),o}const l=O(process.cwd(),"gqty.config.cjs"),w={filepath:l,config:o};let g;const N=async({writeConfigFile:i=!1}={})=>(g===void 0&&(g=new Promise(async n=>{try{const t=a=>u(a),e=await h.cosmiconfig("gqty",{searchPlaces:[process.env.GQTY_CONFIG_FILE_PATH,"gqty.config.cjs","gqty.config.js","package.json"],loaders:{".cjs":t,".js":t}}).search();if(!e||e.isEmpty){const a=(e==null?void 0:e.filepath)||l,r=process.env.NODE_ENV;if(r!=="test"&&r!=="production"&&$.isCLI){const{format:s}=S({parser:"typescript"}),p={...o};delete p.preImport,delete p.enumsAsStrings,i&&await b.writeFile(l,await s(`
                           /**
                            * @type {import("@gqty/cli").GQtyConfig}
                            */
